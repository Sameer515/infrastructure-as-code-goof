# Default values for master-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

environment: "dev"  # Set to 'dev', 'pqa', 'fqa', or 'prod'

replicaCount: 1

namespace: "namespace"

# Unique release name for each environment
releaseName: "ldapserviceapp-{{ .Values.environment }}"

# Name of the microservice
resourceName: "ldapserviceapp"

# Build configuration
build:
  imageStreamNamespace: "spring-boot-dev"
  builderImage: "openjdk18-openshift:latest"
  pushSecret: "nexus-secret-pull"

# Image to be deployed
image:
  repository: "155.49.226.22:8082/web-images-hosted/ldapserviceapp"
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets:
  - nexus-secret-pull

# Enable environment variables
enableEnvVars: true

# Environment variables
envVars:
  - name: spring.profiles.active
    value: dev
  - name: serverUrl
    value: "ldap://{{ .Values.ldapServerUrl }}"  # Use environment variable for sensitive value
  - name: userId
    value: "dsjboss"
  - name: password
    value: "{{ .Values.ldapPassword }}"  # Use environment variable for sensitive value
  - name: server.contextPath
    value: "/ldapservice"
  - name: LdapUrl
    value: "LdapUrl=https://{{ .Values.ldapServerUrl }}/iam/im/TEWS6/thp/"
  - name: RequestIP
    value: "RequestIP=******"
  - name: TewsUser
    value: "TewsUser=wenjkbimtews"
  - name: TewsPassword
    value: "{{ .Values.tewsPassword }}"  # Use environment variable for sensitive value
  - name: TewsLdapGroupAdmin
    value: "TewsLdapGroupAdmin=webimtews"
  - name: TewsLdapGroupSuperAdmin
    value: "TewsLdapGroupSuperAdmin=SuperUser"
  - name: TewsLdapGroupTibAdmin
    value: "TewsLdapGroupTibAdmin=tibimtews"
  - name: ldapSecSrvURL
    value: "ldapSecSrvURL=ldap://{{ .Values.ldapSecSrvUrl }}/dc=com"
  - name: PharmacyClaimsUserId
    value: "PharmacyClaimsUserId=****************"
  - name: PharmacyClaimsPwd
    value: "{{ .Values.pharmacyClaimsPwd }}"  # Use environment variable for sensitive value

# Container ports
containerPorts:
  - 8080
  - 8443
  - 8778

# Supplemental groups
supplementalGroups: ""

# Resource requests and limits
resources:
  limits:
    cpu: "500m"
    memory: "2Gi"
  requests:
    cpu: "50m"
    memory: "1Gi"

# DNS configuration
dnsConfig:
  searches:
    - thp.tahphq.tahp
    - tahphq.tahp

# Health checks
probes:
  enabled: true
  readinessHttpGet:
    path: "/actuator/health"
    port: 8080
    timeoutSeconds: 5
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
    initialDelaySeconds: 10
  livenessHttpGet:
    path: "/actuator/health"
    port: 8080
    timeoutSeconds: 5
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
    initialDelaySeconds: 600

# Service definition
service:
  containerPorts:
    - name: http
      protocol: TCP
      containerPort: 8080
  type: ClusterIP

# Route definition
route:
  enabled: true
  domain: apps.tdqocp.thp.tahphq.tahp
  #targetPort: 80